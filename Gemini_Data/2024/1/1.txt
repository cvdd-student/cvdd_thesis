def calculate_distance(left_list, right_list):
    """Calculates the total distance between two lists of location IDs.

    Args:
        left_list: A list of integers representing location IDs.
        right_list: A list of integers representing location IDs.

    Returns:
        An integer representing the total distance between the lists.
        Returns 0 if either list is empty.  Raises TypeError if input is not a list of ints.
    """
    
    if not isinstance(left_list, list) or not isinstance(right_list, list):
        raise TypeError("Input must be lists")
    if not all(isinstance(item, int) for item in left_list) or not all(isinstance(item, int) for item in right_list):
        raise TypeError("Input lists must contain only integers.")
    if not left_list or not right_list:
        return 0
    
    left_sorted = sorted(left_list)
    right_sorted = sorted(right_list)
    total_distance = 0
    
    i = 0
    j = 0
    while i < len(left_sorted) and j < len(right_sorted):
        total_distance += abs(left_sorted[i] - right_sorted[j])
        i += 1
        j += 1
    return total_distance

# Example usage (replace with your actual input):
left_list = [3, 4, 2, 1, 3, 3]
right_list = [4, 3, 5, 3, 9, 3]

try:
  distance = calculate_distance(left_list, right_list)
  print(distance)
except TypeError as e:
  print(f"Error: {e}")