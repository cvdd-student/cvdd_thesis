def solve():
    def parse_input(input_str):
        lines = input_str.strip().split('\n')
        machines = []
        for i in range(0, len(lines), 3):
            a_line = lines[i].split(":")
            b_line = lines[i + 1].split(":")
            prize_line = lines[i + 2].split("=")
            
            xa, ya = map(int, a_line[1].strip().split(","))
            xb, yb = map(int, b_line[1].strip().split(","))
            xp, yp = int(prize_line[1].strip()), int(prize_line[1].strip().split(',')[1])

            machines.append(((xa, ya), (xb, yb), (xp, yp)))

        return machines

    def find_solution(machine):
        a_move_x, a_move_y = machine[0]
        b_move_x, b_move_y = machine[1]
        prize_x, prize_y = machine[2]

        best_cost = float('inf')
        for a_count in range(101):
            for b_count in range(101):
                current_x = a_count * a_move_x + b_count * b_move_x
                current_y = a_count * a_move_y + b_count * b_move_y
                if current_x == prize_x and current_y == prize_y:
                    cost = a_count * 3 + b_count * 1
                    best_cost = min(best_cost, cost)
        return best_cost if best_cost != float('inf') else float('inf')


    def find_min_cost(machines):
      min_total_cost = float('inf')
      for i in range(1 << len(machines)):
          current_machines = []
          for j in range(len(machines)):
              if (i >> j) & 1:
                  current_machines.append(machines[j])

          if len(current_machines) == 0:
            continue

          total_cost = 0
          for machine in current_machines:
              cost = find_solution(machine)
              if cost == float('inf'):
                  total_cost = float('inf')
                  break
              total_cost += cost

          if total_cost != float('inf'):
              min_total_cost = min(min_total_cost, total_cost)

      return min_total_cost if min_total_cost != float('inf') else -1

    
    input_data = """
Button A: X+94, Y+34
Button B: X+22, Y+67
Prize: X=8400, Y=5400

Button A: X+26, Y+66
Button B: X+67, Y+21
Prize: X=12748, Y=12176

Button A: X+17, Y+86
Button B: X+84, Y+37
Prize: X=7870, Y=6450

Button A: X+69, Y+23
Button B: X+27, Y+71
Prize: X=18641, Y=10279
"""
    machines = parse_input(input_data)
    result = find_min_cost(machines)
    print(result)
solve()