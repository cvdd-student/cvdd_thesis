def solve():
    patterns = input().split(", ")
    patterns = [pattern.strip() for pattern in patterns]
    
    input()  # Consume the blank line

    designs = []
    while True:
        try:
            design = input()
            designs.append(design)
        except EOFError:
            break

    def can_make(design, patterns):
        n = len(design)
        if n == 0:
            return True

        for i in range(1, n + 1):
            prefix = design[:i]
            if prefix in patterns:
                if can_make(design[i:], patterns):
                    return True
        return False

    possible_count = 0
    for design in designs:
        if can_make(design, patterns):
            possible_count += 1

    print(possible_count)


solve()