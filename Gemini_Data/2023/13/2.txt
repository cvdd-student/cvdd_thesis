def solve():
    patterns = []
    while True:
        try:
            pattern = input()
            patterns.append(pattern)
        except EOFError:
            break

    total_sum = 0
    for pattern_str in patterns:
        grid = [list(row) for row in pattern_str.split('\n')]
        rows = len(grid)
        cols = len(grid[0])

        # Check for vertical reflections
        for i in range(1, cols):
            valid_reflection = True
            for j in range(rows):
                if i - 1 - j < 0 or i - 1 - j >= cols:
                    if grid[j][i] != '.':
                        valid_reflection = False
                elif grid[j][i] != grid[j][i - (i - j)]:
                    valid_reflection = False
            if valid_reflection:
              
              total_sum += i

              break

        # Check for horizontal reflections
        for i in range(1, rows):
            valid_reflection = True
            for j in range(cols):
              if i-1-j<0 or i-1-j>= rows:
                    if grid[i][j] !='.':
                       valid_reflection=False
              elif grid[i][j]!= grid[i-1-j][j]:
                      valid_reflection = False


            if valid_reflection:
              total_sum+= 100*(i-1)
              break
  
    print(total_sum)

solve()