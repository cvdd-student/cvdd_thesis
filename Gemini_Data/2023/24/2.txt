def solve():
    hailstones = []
    with open("input.txt", "r") as f:  # Replace with your input file
        for line in f:
            parts = line.split()
            pos = parts[0].split(",")
            vel = parts[2].split(",")
            px, py, pz = int(pos[0]), int(pos[1]), int(pos[2].split('@')[0])
            vx, vy, vz = int(vel[0]), int(vel[1]), int(vel[2])
            hailstones.append((px, py, vx, vy))
            
    count = 0
    for i in range(len(hailstones)):
        for j in range(i + 1, len(hailstones)):
            px1, py1, vx1, vy1 = hailstones[i]
            px2, py2, vx2, vy2 = hailstones[j]

            # Calculate time of intersection (if any).
            # Formula derived by solving simultaneously for X and Y:
            # px1 + t*vx1 = px2 + t*vx2
            # py1 + t*vy1 = py2 + t*vy2
            # Note: parallel paths are ignored to avoid division by zero errors


            denom = (vx1 - vx2)
            if denom == 0 : continue
            t = (px2 - px1) / denom 
            
            if (py2-py1) / (vy1-vy2) == t:
                x = px1 + t * vx1
                y = py1 + t * vy1
                if 200000000000000 <= x <= 400000000000000 and 200000000000000 <= y <= 400000000000000:
                  count += 1

    return count

print(solve())