def solve():
    hailstones = []
    with open("input.txt", "r") as f:
        for line in f:
            parts = line.split()
            pos = [int(x) for x in parts[0].split(",")]
            vel = [int(x) for x in parts[2].split(",")]
            vel = vel[:2]  # Exclude Z component
            hailstones.append((pos[:2], vel))  # Only X and Y coordinates

    count = 0
    for i in range(len(hailstones)):
        for j in range(i + 1, len(hailstones)):
            pos1, vel1 = hailstones[i]
            pos2, vel2 = hailstones[j]
            
            # Calculate intersection time (if any)
            
            denominator = (vel1[0] - vel2[0])
            if denominator == 0:
                continue # no intersection if parallel

            t = float((pos2[0] - pos1[0]) / (vel1[0] - vel2[0]))
            
            if t < 0 :
              continue
              
            x = pos1[0] + vel1[0] * t
            y = pos1[1] + vel1[1] * t

            
            if 200000000000000 <= x <= 400000000000000 and 200000000000000 <= y <= 400000000000000:
                count += 1

    return count


if __name__ == "__main__":
    result = solve()
    print(result)