def solve():
    lines = []
    while True:
        try:
            line = input()
            lines.append(line)
        except EOFError:
            break
    instructions = input()

    grid = []
    for line in lines:
        grid.append(list(line))

    rows = len(grid)
    cols = len(grid[0])
    
    row = -1
    col = -1
    facing = 0  # 0: right, 1: down, 2: left, 3: up

    for r in range(rows):
        for c in range(cols):
            if grid[r][c] == '.':
                row = r
                col = c
                break
        if row != -1:
            break

    instructions_list = [int(c) if c.isdigit() else c for c in instructions]

    for instruction in instructions_list:
        if isinstance(instruction, int):
            for _ in range(instruction):
                next_row, next_col = row, col
                if facing == 0:
                    next_col += 1
                elif facing == 1:
                    next_row += 1
                elif facing == 2:
                    next_col -= 1
                elif facing == 3:
                    next_row -= 1

                next_row = (next_row % rows + rows) % rows  # Wrap around
                next_col = (next_col % cols + cols) % cols
                
                if grid[next_row][next_col] == '#':
                    break
                else:
                    row, col = next_row, next_col
        else:
            if instruction == 'R':
                facing = (facing + 1) % 4
            elif instruction == 'L':
                facing = (facing - 1 + 4) % 4

    return 1000 * (row + 1) + 4 * (col + 1) + facing


print(solve())