def solve():
    grid = []
    with open("input.txt", "r") as file:
        for line in file:
            grid.append(list(map(int, list(line.strip()))))

    rows = len(grid)
    cols = len(grid[0])
    visible_count = 0

    # Check for visible trees on the edges
    for i in range(rows):
        for j in range(cols):
            if i == 0 or i == rows - 1 or j == 0 or j == cols - 1:
                visible_count += 1
                continue

            # Check visibility from left
            visible_from_left = True
            for k in range(j):
                if grid[i][k] >= grid[i][j]:
                    visible_from_left = False
                    break
            
            # Check visibility from right
            visible_from_right = True
            for k in range(j + 1, cols):
                if grid[i][k] >= grid[i][j]:
                    visible_from_right = False
                    break

            # Check visibility from top
            visible_from_top = True
            for k in range(i):
                if grid[k][j] >= grid[i][j]:
                    visible_from_top = False
                    break
            
            # Check visibility from bottom
            visible_from_bottom = True
            for k in range(i + 1, rows):
                if grid[k][j] >= grid[i][j]:
                    visible_from_bottom = False
                    break
            
            if visible_from_left or visible_from_right or visible_from_top or visible_from_bottom:
                visible_count += 1
    return visible_count


if __name__ == "__main__":
    result = solve()
    print(result)